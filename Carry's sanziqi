#pragma once
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
//宏定义
#define ROW 3
#define COL 3

//   函数声明;

//菜单的打印
void menu();

//数组的初始化
void chushihua(char arr[ROW][COL],int cow,int col);

//打印二维数组
void dayinshuzu(char arr[ROW][COL], int cow, int col);

//游戏的进行
void game1(char arr[ROW][COL], int cow, int col);
void game2(char arr[ROW][COL], int cow, int col);

//判断输赢
char iswin(char arr[ROW][COL], int cow, int col);







#define  _CRT_SECURE_NO_WARNINGS 1
#include "三子棋.h"

//菜单的打印
void menu()
{
	printf("************ 1  play  ******************\n");
	printf("************ 0 退出游戏 ****************\n");
	printf("****************************************\n");
	printf("****************************************\n");
	printf("*************请输入数字*****************\n");
}


//二维数组的初始化
void chushihua(char arr[ROW][COL], int row, int col)
{ 
	int a = 0;
	int b = 0;
	for (a = 0 ; a <= row ; a++)
	{
		for (b = 0; b <= col; b++)
		{
			arr[a][b] = ' ';
		}
	}
}

//二维数组的打印
void dayinshuzu(char arr[ROW][COL], int row, int col)
{
	int a = 0;
	int b = 0;
	for (a = 0; a < row; a++)
	{
		printf(" %c | %c | %c \n", arr[a][0], arr[a][1], arr[a][2]);
		if (a < row - 1)
			printf("---|---|---\n");
	}
}


	//游戏的进行
void game1(char arr[ROW][COL], int row, int col)
{
		//玩家走
		printf("请输入坐标\n");
		int c = 0;
		int d = 0;
		scanf_s("%d%d", &c, &d);
		if (c >= 1 && c <= row && d >= 1 && d <= col)
		{
			if (arr[c - 1][d - 1] == ' ')
			{
				arr[c - 1][d - 1] = '*';
			}
			else
			{
				printf("坐标输入不合法，请重新输入！\n");
			}
		}
		else
			printf("请重新输入\n");
		dayinshuzu(arr, ROW, COL);

		////判断输赢
		//	int i = 0;
		//	for (i = 0; i < row; i++)
		//	{
		//		if ((arr[i][0] == arr[i][1] == arr[i][2] == '*') || (arr[0][i] == arr[1][i] == arr[2][i] == '*') || (arr[0][0] == arr[1][1] == arr[2][2] == '*') || (arr[0][2] == arr[1][1] == arr[2][0] == '*'))
		//		{
		//			printf("恭喜玩家胜利\n");
		//			goto asd;
		//		}
		//		else break;
		//	}
	
}

	void game2(char arr[ROW][COL], int row, int col)
	{
		//电脑走
	asd: 
		  printf("电脑走\n");
		  int x = rand()%row;
		  int y = rand()%col;
		  printf("%d %d\n", x, y);
		  if (arr[x][y] == ' ')
		  {
			  arr[x][y] = '$';
		  }
		  else
			  goto asd;
		  dayinshuzu(arr, ROW, COL);

		 ////判断输赢
		 // int k = 0;
		 // for (k = 0; k < row; k++)
		 // {
			//  if ((arr[k][0] == arr[k][1] == arr[k][2] == '$') || (arr[0][k] == arr[1][k] == arr[2][k] == '$') || (arr[0][0] == arr[1][1] == arr[2][2] == '$') || (arr[0][2] == arr[1][1] == arr[2][0] == '$'))
			//  {
			//	  printf("恭喜电脑胜利\n");
			//	  goto asd;
			//  }
			//  else break;
		 // }
	}


//判断输赢
char iswin(char arr[ROW][COL], int cow, int col)
{
	int i = 0;
	for (i = 0;i < cow;i++)
	{
		if (arr[i][0] == arr[i][1] && arr[i][1] == arr[i][2] && arr[i][1] != ' ')
		{
			return arr[i][1];
			printf("%c", arr[i][1]);
		}
		else continue;
			
	}
	for (i = 0; i < cow; i++)
	{
		if (arr[0][i] == arr[1][i] && arr[1][i] == arr[2][i] && arr[1][i] != ' ')
		{
			return arr[1][i];
			printf("%c", arr[1][i]);
		}
		else continue;
	}
	if (arr[0][0] == arr[1][1] && arr[1][1] == arr[2][2] && arr[0][0] != ' ')
	{
		return arr[0][0];
		printf("%c", arr[0][0]);
	}
	else printf("6");
	if (arr[0][2] == arr[1][1] && arr[1][1] == arr[2][0] && arr[0][2] != ' ')

	{
		return arr[1][1];
		printf("%c", arr[1][1]);
	}
	else printf("6");
}


#define  _CRT_SECURE_NO_WARNINGS 1
#include "三子棋.h"

int main()
{
	int input = 0;
	char q = 0;
	//打印菜单
	menu();

	//进行选择
	scanf_s("%d", &input);

	//二维数组的创建
	char arr[ROW][COL];

	//数组的初始化
	chushihua(arr,ROW,COL);

	//随机数生成
	srand((unsigned int)time(NULL));

	do
	{
		switch(input)
		{
		case 1:

		//打印二维数组
            dayinshuzu(arr,ROW,COL);
	    //玩家下棋
			game1(arr, ROW, COL);
			q=iswin(arr, ROW, COL);
			printf("%c\n", q);
			if (q == '*')
			{
				printf("恭喜玩家胜利\n");
				goto sss;
			}

	    //电脑下棋
			game2(arr, ROW, COL);

			iswin(arr, ROW, COL);
			q = iswin(arr, ROW, COL);
			printf("%c\n", q);
			if (q == '$')
			{
				printf("恭喜电脑胜利\n");
			}
			goto sss;

		case 0:
			printf("退出游戏成功");
			break;
		default :
			printf("输入不合法，请重新输入"); 
			break;   
		}
	} while (input);
sss:
	printf("游戏结束！");
	return 0;
}



